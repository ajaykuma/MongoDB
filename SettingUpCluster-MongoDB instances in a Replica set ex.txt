
#setup ssh access for root user (password less)
#create directory /srv/mongodb/db0[m1],/srv/mongodb/db1[m2],/srv/mongodb/db2[m3]
root@m1:~# mongod --port 27017 --dbpath /srv/mongodb/db0 --replSet rs0 --bind_ip 192.168.182.12
root@m1:~# mongod --port 27017 --dbpath /srv/mongodb/db1 --replSet rs0 --bind_ip 192.168.182.13
root@m3:~# mongod --port 27017 --dbpath /srv/mongodb/db2 --replSet rs0 --bind_ip 192.168.182.14

#connect to one of mongod instances using mongo
root@m1:~# mongo --host m1 --port 27017
MongoDB shell version v3.4.23
connecting to: mongodb://m1:27017/
MongoDB server version: 3.4.23
Server has startup warnings: 
2019-10-01T18:22:43.427+0200 I STORAGE  [initandlisten] 
2019-10-01T18:22:43.428+0200 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2019-10-01T18:22:43.428+0200 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2019-10-01T18:22:43.503+0200 I CONTROL  [initandlisten] 
2019-10-01T18:22:43.503+0200 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-01T18:22:43.503+0200 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-01T18:22:43.503+0200 I CONTROL  [initandlisten] ** WARNING: You are running this process as the root user, which is not recommended.
2019-10-01T18:22:43.503+0200 I CONTROL  [initandlisten]

#check replica set status 
> rs.status()
{
	"info" : "run rs.initiate(...) if not yet done for the set",
	"ok" : 0,
	"errmsg" : "no replset config has been received",
	"code" : 94,
	"codeName" : "NotYetInitialized"
}

#initiate replica set
> rs.initiate()
{
	"info2" : "no configuration specified. Using a default configuration for the set",
	"me" : "192.168.182.12:27017",
	"ok" : 1
}

#check status
rs0:SECONDARY> rs.status()
{
	"set" : "rs0",
	"date" : ISODate("2019-10-01T16:36:27.636Z"),
	"myState" : 1,
	"term" : NumberLong(1),
	"syncingTo" : "",
	"syncSourceHost" : "",
	"syncSourceId" : -1,
	"heartbeatIntervalMillis" : NumberLong(2000),
	"optimes" : {
		"lastCommittedOpTime" : {
			"ts" : Timestamp(1569947781, 1),
			"t" : NumberLong(1)
		},
		"appliedOpTime" : {
			"ts" : Timestamp(1569947781, 1),
			"t" : NumberLong(1)
		},
		"durableOpTime" : {
			"ts" : Timestamp(1569947781, 1),
			"t" : NumberLong(1)
		}
	},
	"members" : [
		{
			"_id" : 0,
			"name" : "192.168.182.12:27017",
			"health" : 1,
			"state" : 1,
			"stateStr" : "PRIMARY",
			"uptime" : 824,
			"optime" : {
				"ts" : Timestamp(1569947781, 1),
				"t" : NumberLong(1)
			},
			"optimeDate" : ISODate("2019-10-01T16:36:21Z"),
			"syncingTo" : "",
			"syncSourceHost" : "",
			"syncSourceId" : -1,
			"infoMessage" : "could not find member to sync from",
			"electionTime" : Timestamp(1569947780, 2),
			"electionDate" : ISODate("2019-10-01T16:36:20Z"),
			"configVersion" : 1,
			"self" : true,
			"lastHeartbeatMessage" : ""
		}
	],
	"ok" : 1
}

#check if one mongod has transitioned as master
rs0:PRIMARY> db.isMaster()
{
	"hosts" : [
		"192.168.182.12:27017"
	],
	"setName" : "rs0",
	"setVersion" : 1,
	"ismaster" : true,
	"secondary" : false,
	"primary" : "192.168.182.12:27017",
	"me" : "192.168.182.12:27017",
	"electionId" : ObjectId("7fffffff0000000000000001"),
	"lastWrite" : {
		"opTime" : {
			"ts" : Timestamp(1569947871, 1),
			"t" : NumberLong(1)
		},
		"lastWriteDate" : ISODate("2019-10-01T16:37:51Z")
	},
	"maxBsonObjectSize" : 16777216,
	"maxMessageSizeBytes" : 48000000,
	"maxWriteBatchSize" : 1000,
	"localTime" : ISODate("2019-10-01T16:37:58.741Z"),
	"maxWireVersion" : 5,
	"minWireVersion" : 0,
	"readOnly" : false,
	"ok" : 1
}

#Add other members to replica set ( ie mongod instances that were started on other machines belonging to this replica set)
#note priority and votes is set to 0 now, we will change that later

rs0:PRIMARY> rs.add({host: "m2:27017",priority: 0, votes: 0})
{ "ok" : 1 }

#check status
rs0:PRIMARY> rs.status()
{
	"set" : "rs0",
	"date" : ISODate("2019-10-01T16:41:39.888Z"),
	"myState" : 1,
	"term" : NumberLong(1),
	"syncingTo" : "",
	"syncSourceHost" : "",
	"syncSourceId" : -1,
	"heartbeatIntervalMillis" : NumberLong(2000),
	"optimes" : {
		"lastCommittedOpTime" : {
			"ts" : Timestamp(1569948083, 1),
			"t" : NumberLong(1)
		},
		"appliedOpTime" : {
			"ts" : Timestamp(1569948083, 1),
			"t" : NumberLong(1)
		},
		"durableOpTime" : {
			"ts" : Timestamp(1569948083, 1),
			"t" : NumberLong(1)
		}
	},
	"members" : [
		{
			"_id" : 0,
			"name" : "192.168.182.12:27017",
			"health" : 1,
			"state" : 1,
			"stateStr" : "PRIMARY",
			"uptime" : 1136,
			"optime" : {
				"ts" : Timestamp(1569948083, 1),
				"t" : NumberLong(1)
			},
			"optimeDate" : ISODate("2019-10-01T16:41:23Z"),
			"syncingTo" : "",
			"syncSourceHost" : "",
			"syncSourceId" : -1,
			"infoMessage" : "",
			"electionTime" : Timestamp(1569947780, 2),
			"electionDate" : ISODate("2019-10-01T16:36:20Z"),
			"configVersion" : 2,
			"self" : true,
			"lastHeartbeatMessage" : ""
		},
		{
			"_id" : 1,
			"name" : "m2:27017",
			"health" : 1,
			"state" : 2,
			"stateStr" : "SECONDARY",
			"uptime" : 16,
			"optime" : {
				"ts" : Timestamp(1569948083, 1),
				"t" : NumberLong(1)
			},
			"optimeDurable" : {
				"ts" : Timestamp(1569948083, 1),
				"t" : NumberLong(1)
			},
			"optimeDate" : ISODate("2019-10-01T16:41:23Z"),
			"optimeDurableDate" : ISODate("2019-10-01T16:41:23Z"),
			"lastHeartbeat" : ISODate("2019-10-01T16:41:39.288Z"),
			"lastHeartbeatRecv" : ISODate("2019-10-01T16:41:38.599Z"),
			"pingMs" : NumberLong(0),
			"lastHeartbeatMessage" : "",
			"syncingTo" : "",
			"syncSourceHost" : "",
			"syncSourceId" : -1,
			"infoMessage" : "",
			"configVersion" : 2
		}
	],
	"ok" : 1
}

#adding one more member

rs0:PRIMARY> rs.add({host: "m3:27017",priority: 0, votes: 0})
{ "ok" : 1 }

#checking status

rs0:PRIMARY> rs.status()
{
	"set" : "rs0",
	"date" : ISODate("2019-10-01T16:43:07.763Z"),
	"myState" : 1,
	"term" : NumberLong(1),
	"syncingTo" : "",
	"syncSourceHost" : "",
	"syncSourceId" : -1,
	"heartbeatIntervalMillis" : NumberLong(2000),
	"optimes" : {
		"lastCommittedOpTime" : {
			"ts" : Timestamp(1569948184, 1),
			"t" : NumberLong(1)
		},
		"appliedOpTime" : {
			"ts" : Timestamp(1569948184, 1),
			"t" : NumberLong(1)
		},
		"durableOpTime" : {
			"ts" : Timestamp(1569948184, 1),
			"t" : NumberLong(1)
		}
	},
	"members" : [
		{
			"_id" : 0,
			"name" : "192.168.182.12:27017",
			"health" : 1,
			"state" : 1,
			"stateStr" : "PRIMARY",
			"uptime" : 1224,
			"optime" : {
				"ts" : Timestamp(1569948184, 1),
				"t" : NumberLong(1)
			},
			"optimeDate" : ISODate("2019-10-01T16:43:04Z"),
			"syncingTo" : "",
			"syncSourceHost" : "",
			"syncSourceId" : -1,
			"infoMessage" : "",
			"electionTime" : Timestamp(1569947780, 2),
			"electionDate" : ISODate("2019-10-01T16:36:20Z"),
			"configVersion" : 3,
			"self" : true,
			"lastHeartbeatMessage" : ""
		},
		{
			"_id" : 1,
			"name" : "m2:27017",
			"health" : 1,
			"state" : 2,
			"stateStr" : "SECONDARY",
			"uptime" : 104,
			"optime" : {
				"ts" : Timestamp(1569948184, 1),
				"t" : NumberLong(1)
			},
			"optimeDurable" : {
				"ts" : Timestamp(1569948184, 1),
				"t" : NumberLong(1)
			},
			"optimeDate" : ISODate("2019-10-01T16:43:04Z"),
			"optimeDurableDate" : ISODate("2019-10-01T16:43:04Z"),
			"lastHeartbeat" : ISODate("2019-10-01T16:43:06.053Z"),
			"lastHeartbeatRecv" : ISODate("2019-10-01T16:43:04.048Z"),
			"pingMs" : NumberLong(0),
			"lastHeartbeatMessage" : "",
			"syncingTo" : "",
			"syncSourceHost" : "",
			"syncSourceId" : -1,
			"infoMessage" : "",
			"configVersion" : 3
		},
		{
			"_id" : 2,
			"name" : "m3:27017",
			"health" : 1,
			"state" : 2,
			"stateStr" : "SECONDARY",
			"uptime" : 3,
			"optime" : {
				"ts" : Timestamp(1569948184, 1),
				"t" : NumberLong(1)
			},
			"optimeDurable" : {
				"ts" : Timestamp(1569948184, 1),
				"t" : NumberLong(1)
			},
			"optimeDate" : ISODate("2019-10-01T16:43:04Z"),
			"optimeDurableDate" : ISODate("2019-10-01T16:43:04Z"),
			"lastHeartbeat" : ISODate("2019-10-01T16:43:06.053Z"),
			"lastHeartbeatRecv" : ISODate("2019-10-01T16:43:04.398Z"),
			"pingMs" : NumberLong(0),
			"lastHeartbeatMessage" : "",
			"syncingTo" : "",
			"syncSourceHost" : "",
			"syncSourceId" : -1,
			"infoMessage" : "",
			"configVersion" : 3
		}
	],
	"ok" : 1
}

#checking configuration now
rs0:PRIMARY> rs.conf()
{
	"_id" : "rs0",
	"version" : 3,
	"protocolVersion" : NumberLong(1),
	"members" : [
		{
			"_id" : 0,
			"host" : "192.168.182.12:27017",
			"arbiterOnly" : false,
			"buildIndexes" : true,
			"hidden" : false,
			"priority" : 1,
			"tags" : {
				
			},
			"slaveDelay" : NumberLong(0),
			"votes" : 1
		},
		{
			"_id" : 1,
			"host" : "m2:27017",
			"arbiterOnly" : false,
			"buildIndexes" : true,
			"hidden" : false,
			"priority" : 0,
			"tags" : {
				
			},
			"slaveDelay" : NumberLong(0),
			"votes" : 0
		},
		{
			"_id" : 2,
			"host" : "m3:27017",
			"arbiterOnly" : false,
			"buildIndexes" : true,
			"hidden" : false,
			"priority" : 0,
			"tags" : {
				
			},
			"slaveDelay" : NumberLong(0),
			"votes" : 0
		}
	],
	"settings" : {
		"chainingAllowed" : true,
		"heartbeatIntervalMillis" : 2000,
		"heartbeatTimeoutSecs" : 10,
		"electionTimeoutMillis" : 10000,
		"catchUpTimeoutMillis" : 60000,
		"getLastErrorModes" : {
			
		},
		"getLastErrorDefaults" : {
			"w" : 1,
			"wtimeout" : 0
		},
		"replicaSetId" : ObjectId("5d93808452ac76491536d683")
	}
}

#editing config to change priority and voting of one of the member to 1,so that it participates in election of primary

rs0:PRIMARY> var cfg = rs.conf()
rs0:PRIMARY> cfg.members[1].priority = 1
1
rs0:PRIMARY> cfg.members[1].votes = 1
1

#refreshing config

rs0:PRIMARY> rs.reconfig(cfg)
{ "ok" : 1 }

#check now
rs0:PRIMARY> rs.conf()
{
	"_id" : "rs0",
	"version" : 4,
	"protocolVersion" : NumberLong(1),
	"members" : [
		{
			"_id" : 0,
			"host" : "192.168.182.12:27017",
			"arbiterOnly" : false,
			"buildIndexes" : true,
			"hidden" : false,
			"priority" : 1,
			"tags" : {
				
			},
			"slaveDelay" : NumberLong(0),
			"votes" : 1
		},
		{
			"_id" : 1,
			"host" : "m2:27017",
			"arbiterOnly" : false,
			"buildIndexes" : true,
			"hidden" : false,
			"priority" : 1,
			"tags" : {
				
			},
			"slaveDelay" : NumberLong(0),
			"votes" : 1
		},
		{
			"_id" : 2,
			"host" : "m3:27017",
			"arbiterOnly" : false,
			"buildIndexes" : true,
			"hidden" : false,
			"priority" : 0,
			"tags" : {
				
			},
			"slaveDelay" : NumberLong(0),
			"votes" : 0
		}
	],
	"settings" : {
		"chainingAllowed" : true,
		"heartbeatIntervalMillis" : 2000,
		"heartbeatTimeoutSecs" : 10,
		"electionTimeoutMillis" : 10000,
		"catchUpTimeoutMillis" : 60000,
		"getLastErrorModes" : {
			
		},
		"getLastErrorDefaults" : {
			"w" : 1,
			"wtimeout" : 0
		},
		"replicaSetId" : ObjectId("5d93808452ac76491536d683")
	}
}

#cluster is setup with mongod instances in a replica set

rs0:PRIMARY> 

